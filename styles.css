               /* forg website */
/* :root {
    --superhero: 'Bangers', cursive;
    --fantasy: 'MedievalSharp', cursive;
    --space: 'Orbitron', sans-serif;
    --military: 'Black Ops One', cursive;
    --romantic: 'La Belle Aurore', cursive;
    --scary: 'Creepster', cursive;
    --cowboy: 'Rye', cursive;
    --regular: sans-serif;
    --fantasy: 'MedievalSharp', cursive;
    --font: var(--regular);
    --sharp: 0;
    --soft: 10px;
    --round: 100px;
    
    --image: var(--soft);
    
    --background: #f5f5f5;
    --text: #222222;
    
    --light: var(--background);
    --dark: var(--text);
}


body, html {
    margin: 0;
    padding: 10px;
    background: var(--background);
    color: var(--text);
    font-family: var(--font);
}

img {
    width: 30%;
    border-radius: calc(var(--image) * 2);
    border: 4px solid var(--text);
}

a {
    color: var(--text);
}

input {
    display: block;
    margin: 20px 0 0;
    width: 160px;
    box-sizing: border-box;
    padding: 4px 8px;
    border-width: 1px; 
    border-style: solid;
    border-color:  var(--text);
    color: var(--text);
    background: none;
    border-radius: var(--image);
    font-family: var(--font);
}

::placeholder {
    color: var(--text);
}

button {
    border-radius: var(--image);
    padding: 5px 10px;
    border: none;
    background: var(--text);
    color: var(--background);
    font-weight: bold;
    box-sizing: border-box;
    display: block;
    margin: 8px 0;
    cursor: pointer;
    font-family: var(--font);
    width: 160px;
} */




                  /* css learning */

 /* css works by selecting html elements and styling them
the below code is styling the body 
the elements within must have a : and then a ; */
    /* body {
    background: whitesmoke;     /* red, blue, yellow, etc */
 /*   color: purple;            red, blue, yellow, etc
    font-size: 50px;        0px - 100px and beyond
    font-weight: bolder;   /* lighter, normal, bold  */
 /*   text-align: center;      /* left, center or right  */ 
 /*   margin-top: 500px;        From 0px and upwards  
}  */
                 /* google css*/

/* .main {
    margin-top: 100px;
}
.logo-img {
    width: 300px;
    display:block;
    margin-bottom: 20px;
    margin-left: auto;
    margin-right: auto;
    
}
.search-input {
    width: 400px;
    line-height: 24px;
    display:block;
    margin-left: auto;
    margin-right: auto;
    padding-top: 10px;
    padding-bottom: 10 px;
    padding-left: 30px;
    padding-right: 30px;
    border: 1px solid #dfe1e5;
    border-radius: 24px;
}
.btn{
    margin-top: 30px;
    margin-right: 4px;
    margin-left: 4px;
    color: #0f1419;
    background: #dfe1e5;
    padding-top: 8px;
    padding-bottom: 8px;
    padding-left: 16px;
    padding-right: 16px;
    border: #0f1419 solid 0px;
    border-radius: 4px;
    font-size: 14px;
}
.btn-wrapper{
    display: flex;
    justify-content: center;
    
}
.para{
    display:flex;
    font-size: 16px;
    color: #0f1419;
    justify-content: center;
    margin-top: 10px;

} */

        /* inline and block elements */
/* display: inline would stack horizontaly,
display block makes it vertical, and controls all the horizontal space in its place 
 marigin top adds a margin between the lements and the top of the browser */

          /* classes  */

/* written as class="x" and you call it by .x in css */

            /* margins */
 /* written margin-top,margin-left etc   followed by : xPx;   
 they usually collapse into eachother as wellso the block above or below can affect the outcome   
 or just margin for all of them written margin toppx rightpx, bottom px left px 
 or margin verticalpx horizontalpx*/
           
                 /* Centering with margins */

/*space on the outside of elemts, has to be a display block, and must have a width(cant center if it doesnt fit the browser)
then set the margin right and left to auto */

            /* padding */
/*space on the inside of elements, like margins but applies to every direction, set the same way, you can also specify each side with padding
padding resides within the element though  */

                /* borders and border radius  */

/* written   border: 2px solid red; thickness, quality, and color
this will make have hard angles though, to fix that you can add the radius
written border-radius: 100px; 
you can test this values thorugh inspect
    all of this is summed up as the box model    */

                        /* flexbox and text align centering
 text align works on any inline elements, just written text-align:center                        */
/* you can have blocks displayed horizontally with flexbox as well v */
/* allows you to choose where on the main axis it can be placed */
/* justify content has preset postioning with center, end, start, etc */

 /* .nav-wrapper {
    display:flex;
    justify-content: center; 
 }

 .item {
    text-align: center;
    border: 1px solid black;
    padding: 10px;
    margin-top: 10px;
    margin-bottom: 10px;
    margin-left: 10px;
    margin-right: 10px;
} */

             /* more about flexbox
naturally flexbox turns every direct child(the big elements) into a column
so by wrapping code in divs, you can manipulate what is a column and what isnt  */

/* a utility class is a task that can be reused, you can have multiple classes as well */
/* felxbox is like display block, takes up all space */

                /* css inheritance
lets you write less repetitive code by allowing elements to share properties
only some properties can be inherited(google it)
the main are text allign, font properties, and color  */
      /* cntl d selects all instances of a word */

/* body {
    margin: 20px;
    font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif
}
p:hover{
   font-style: italic;
   font-weight: 1000;
   text-shadow:2px 2px rgb(162, 144, 120);
}
h3:hover{
    font-style: italic;
    font-weight: 1000;
    text-shadow:2px 2px rgb(162, 144, 120);
 }
 h4:hover{
    font-style: italic;
    font-weight: 1000;
    text-shadow:2px 2px rgb(162, 144, 120);
 }

.avatar {
    width: 150px;
    border: solid 4px rgb(162, 144, 120);
    border-radius: 20px;
} 
.avatar:hover{
    animation: mymove 10s 1
} 

@keyframes mymove {
    4%{box-shadow: 10px 20px 30px rgb(162, 144, 120);}
    100%{box-shadow: 10px 20px 30px rgb(162, 144, 120);}
}
@keyframes ex {
    0%{background-color:  #27643c ;left:0px; top: 0px;}
    13%{background-color: #397b50;left:200px; top: 0px;}
    24%{background-color:  #519669;left:200px; top: 200px;}
    36%{background-color: #5f9f75;left:0px; top: 200px;}
    50%{background-color: #85b997;left:0px; top: 0px;}
    62%{background-color: #5f9f75;left:0px; top: 200px;}
    74%{background-color:  #519669;left:200px; top: 200px;}
    85%{background-color: #397b50;left:200px; top: 0px;}
    100%{background-color:  #27643c ;left:0px; top: 0px;}    
}
.card {
    width: 400px;
    margin: 0 auto;
    padding: 20px;
    display: flex;
    justify-content: space-around;
    text-align: center;
    background-color: #85b997 ;
    border-bottom: 15px solid rgb(162, 144, 120);
    border-right: 15px solid rgb(162, 144, 120);
    border-radius: 5px;
    color: #2b2839;
   animation-name: ex;
   animation-duration: 4s;
   animation-iteration-count: infinite;
   animation-timing-function: linear;
} */

/* .border{
    border: 1px dotted blue;
} */

                 /* space exploration site */

         /* adding backgorund images */
/* you add it to the body and it looks like the following v
background-image: url("image source") 
background size cover lets it cover the whole browser*/

                 /* google fonts/non websafe fonts */
/* just google a font, hit select style, and then embed it into the html, and apply that into the css as well,
                 @font-face
you can drag a ttf file into your code and use fontface to select a downloaded font                
@font-face {
    src: url("Corleone.ttf");
    font-family: Corleone;
} */

                        /* text shadow 
text-shadow: (-px to px for left and right) (same but top to bottom)(px for blur) (color for shadow) */

/* .orbitron-font {
    font-family: "Orbitron", sans-serif;
    font-optical-sizing: auto;
    font-weight: 400;
    font-style: normal;
}
body {
    color:#82a5ca;
    text-align: center;
    font-family: Orbitron;
    margin-top: 0px;
    margin-right: 0px;
    margin-left: 0px;

}
.hero{
    background-size: cover;
    background-image: url("https://media.giphy.com/media/iicDrNGWxHmDrIni6j/giphy.gif");
    padding-bottom: 100px;
    padding-top: 15px;
   
}
.btn{
    display: block;
    margin: auto;
    font-style: bold;
    font-weight: 800;
    padding: 6px 12px;
    background: white;
    border: none;
    font-family: inherit;
    color:#82a5ca;
}
.cta{

    text-decoration: underline white;
    text-underline-offset: 0.3em;
    
}
#main-logo{
    width: 200px;
}
#title{
    text-shadow: 0px 0px 4px black;
} */


                  /* birthday site project */

             /* flex box and align items
align items will control the vertical axis, so it allows you to control the y axis 
so using align-items: start, center, and end, you can maniuplate the elements to the top center and bottom
with justify content: start, center, end, space-between, space-around, space-evenly, we can maniuplate how the elements are postioned on the x axis 
align items is naturally stretched, youll need to set a hieght
to change how elements are stacked, you use flex-direction: row, column
x and y axis will swap if you do this though              */

                          /* hover
by writing div:hover{} you can change properties when an element is hovered over
you can change color, font sizes, and background images etc */
                          
                       /* order
the more specific indicator will take precedence, so ids carry more weight than classes cause ids are element specific while classes are broader */

                    /* gradients */
/* written background: linear-gradient(topcolor1, bottomcolor) */

#round{
    border-radius: 50%;
    width: 400px;
    border: 6px solid #EFB0C9;
} 

body {
    text-align: center;
    font-family: 'Happy Monkey', cursive;
    background: linear-gradient(#a2d2ff, pink);
    color: #ffffff;
}

.happy-monkey-regular {
    font-family: "Happy Monkey", system-ui;
    font-weight: 400;
    font-style: normal;
  }
h1, h2, h3, h4, p{
    text-shadow: 0px 0px 1px black;
}

#header{
    display: flex;
    flex-direction: column;
    align-items: center;
}

#bday-age {
    background: #EFB0C9;
    padding: 5px 10px;
    border-radius: 5px;
    margin-bottom: 10px;
    margin-top: 5px;
    margin: 5px 0 10px 0;
}

#bday-date {
    margin: 0;
    background: #EFB0C9;
    padding: 5px 10px;
    border-radius: 5px;
}

.gift-section{
    margin-top: 50px;
}

.happy-text{
    margin-bottom:5px;
}

.gift-text{
    margin-top: 5px;
    font-size:large;
    border-bottom: 5px;
}

.gift-img{
    margin: auto;
    height: 400px;
    width:400px;
    border: solid 5px;
    border-radius:10px;
    background-image: url(gift-cover.png);
    background-size: cover;
}

#gift-img:hover{
    background-image: url("https://media1.tenor.com/images/043171b27319b0a03376617c146c6a1e/tenor.gif?itemid=16492328") ;

}

#gift-img1:hover{
    background-image: url("https://media1.tenor.com/images/d2abeebb1e772e4449f22679536ac3e2/tenor.gif?itemid=15822539") ;

}

#gift-img2:hover{
    background-image: url("https://c.tenor.com/y_wQJX-NFTsAAAAM/frog.gif") ;
    background-size: 400px 400px;

}

#gift-img3:hover{
    background-image: url("https://media.giphy.com/media/l27ulpdlU0BfG/giphy.gif") ;
    background-size: 400px 400px;

}

#gift-img4{
    height: 200px;

}

#gift-img4:hover{
    background-image: url("https://usagif.com/wp-content/uploads/2021/4fh5wi/pepefrg-65.gif");
    background-size: 400px 200px;
}

#footer{
    margin: 40 auto 20px;
    font-style: italic;
    font-size: small;
}
a{
    color:#ffffff
}


